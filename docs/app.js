// SRS12: all features + spacing + unified buttons (Nunito 700 / 13px)
const LS_KEY='parola:srs12';
const MIN=60*1000,DAY=24*60*60*1000;
const INTERVALS=[10*MIN,1*DAY,3*DAY,7*DAY,16*DAY];
const state=load()||seed();state.settings=Object.assign({newPerSession:10,maxReviews:100,direction:'it-de',mode:'flashcards',tolerance:20,sortBy:'default'},state.settings||{});save();
function load(){try{return JSON.parse(localStorage.getItem(LS_KEY)||'null')}catch{return null}}
function save(){localStorage.setItem(LS_KEY,JSON.stringify(state))}
function uid(){return Math.random().toString(36).slice(2)}
function now(){return Date.now()}
function fmtInterval(ms){if(ms<60*MIN)return Math.round(ms/MIN)+' min';if(ms<DAY)return Math.round(ms/(60*MIN))+' h';return Math.round(ms/DAY)+' d'}
function nextSchedule(c,res){let idx=Math.max(0,Math.min(INTERVALS.length-1,c.intervalIndex??0)),st=c.streak??0;if(res==='good'){idx=Math.min(INTERVALS.length-1,idx+1);st++}else{idx=0;st=0}const attempts=(c.attempts||0)+1,correct=(c.correct||0)+(res==='good'?1:0);return {...c,intervalIndex:idx,streak:st,dueAt:now()+INTERVALS[idx],attempts,correct}}
function seed(){const t=now();const m=(it,de,notes)=>({id:uid(),it,de,notes,createdAt:t,dueAt:t,intervalIndex:0,streak:0,suspended:false,attempts:0,correct:0});return{items:[m('ciao','hallo; tschüss'),m('grazie','danke'),m('per favore','bitte'),m('come stai?','wie geht\\'s?'),m('acqua','Wasser'),m('pane','Brot'),m('vino','Wein')],settings:{newPerSession:10,maxReviews:100,direction:'it-de',mode:'flashcards',tolerance:20,sortBy:'default'},history:[]}};
function norm(s){return(s||'').toLowerCase().normalize('NFD').replace(/\\p{Diacritic}/gu,'').replace(/[^a-z0-9äöüß ]/gi,'').trim()}
function shuffle(a){return a.map(v=>[Math.random(),v]).sort((x,y)=>x[0]-y[0]).map(x=>x[1])}
function byId(id){return document.getElementById(id)}
function todayKey(d=new Date()){d=new Date(d);d.setHours(0,0,0,0);return d.toISOString().slice(0,10)}
function addHistory(r){const k=todayKey();let row=state.history.find(x=>x.d===k);if(!row){row={d:k,good:0,bad:0};state.history.push(row)}if(r==='good')row.good++;else row.bad++;save()}
function successPct(it){const a=it.attempts||0,c=it.correct||0;return a?Math.round((c/a)*100):null}
function levenshtein(a,b){const m=a.length,n=b.length,dp=Array.from({length:m+1},(_,i)=>Array(n+1).fill(0));for(let i=0;i<=m;i++)dp[i][0]=i;for(let j=0;j<=n;j++)dp[0][j]=j;for(let i=1;i<=m;i++){for(let j=1;j<=n;j++){const cost=a[i-1]===b[j-1]?0:1;dp[i][j]=Math.min(dp[i-1][j]+1,dp[i][j-1]+1,dp[i-1][j-1]+cost)}}return dp[m][n]}
function isClose(a,b){const A=norm(a),B=norm(b);if(!A||!B)return false;if(A===B)return true;const dist=levenshtein(A,B);const tol=Math.max(0,Math.round((state.settings.tolerance||20)/100*B.length));return dist<=tol}
// Tabs
const tabsEl=byId('tabs'),views={learn:byId('view-learn'),list:byId('view-list'),add:byId('view-add'),settings:byId('view-settings')};
if(tabsEl) tabsEl.addEventListener('click',e=>{const btn=e.target.closest('button[data-tab]');if(!btn)return;tabsEl.querySelectorAll('button').forEach(b=>b.classList.toggle('active',b===btn));const tab=btn.dataset.tab;Object.entries(views).forEach(([id,el])=>el.hidden=id!==tab);if(tab==='learn')updateLearn();if(tab==='list')renderList();if(tab==='settings')renderStats()});
// Elements
const learnWord=byId('learnWord'),learnMeta=byId('learnMeta'),answerBox=byId('answerBox'),dueCounter=byId('dueCounter'),fcActions=byId('fcActions'),mcActions=byId('mcActions'),mcBox=byId('mcBox'),typeBox=byId('typeBox'),typeInput=byId('typeInput'),typeFeedback=byId('typeFeedback'),modeSelect=byId('modeSelect'),dirSelect=byId('dirSelect');
modeSelect.value=state.settings.mode;dirSelect.value=state.settings.direction;
modeSelect.addEventListener('change',()=>{state.settings.mode=modeSelect.value;save();updateLearn()});
dirSelect.addEventListener('change',()=>{state.settings.direction=dirSelect.value;save();updateLearn()});
// List, filters, sort
const tbody=byId('tableBody'),searchInput=byId('searchInput'),countTxt=byId('countTxt'),statusFilter=byId('statusFilter'),successFilter=byId('successFilter'),sortSelect=byId('sortBy');
searchInput?.addEventListener('input',renderList);statusFilter?.addEventListener('change',renderList);successFilter?.addEventListener('change',renderList);
if(sortSelect){sortSelect.value=state.settings.sortBy||'default';sortSelect.addEventListener('change',()=>{state.settings.sortBy=sortSelect.value;save();renderList()})}
// Table actions (toggle/pause, delete, inline due edit)
tbody?.addEventListener('click',e=>{const btn=e.target.closest('button[data-action],button[data-edit-due],button[data-save-due],button[data-cancel-due]');if(!btn)return;const id=btn.dataset.id||btn.dataset.editDue||btn.dataset.saveDue||btn.dataset.cancelDue;const card=state.items.find(i=>i.id===id);if(!card)return;if(btn.dataset.action==='delete'){if(!confirm('Eintrag löschen?'))return;state.items=state.items.filter(i=>i.id!==id);save();renderList();updateLearn();return}if(btn.dataset.action==='toggle'){card.suspended=!card.suspended;save();renderList();updateLearn();return}
if(btn.dataset.editDue){const td=btn.closest('td');td.innerHTML=`<div class="due-edit"><input type="datetime-local" class="due-input" value="${toLocalInputValue(card.dueAt||now())}"/><button class="btn primary btn-xs" data-save-due="${card.id}">Speichern</button><button class="btn ghost btn-xs" data-cancel-due="${card.id}">Abbrechen</button></div>`;return}
if(btn.dataset.saveDue){const td=btn.closest('td');const input=td.querySelector('input[type="datetime-local"]');if(input&&input.value){const ts=new Date(input.value).getTime();if(!Number.isNaN(ts)){card.dueAt=ts;save();renderList();updateLearn();return}}alert('Ungültiges Datum');return}
if(btn.dataset.cancelDue){renderList();return}});
function toLocalInputValue(ts){const d=new Date(ts),pad=n=>String(n).padStart(2,'0');return`${d.getFullYear()}-${pad(d.getMonth()+1)}-${pad(d.getDate())}T${pad(d.getHours())}:${pad(d.getMinutes())}`}
function renderList(){const q=(searchInput.value||'').toLowerCase();const stat=statusFilter?.value||'all';const suc=successFilter?.value||'all';let filtered=state.items.filter(i=>norm(i.it).includes(q)||norm(i.de).includes(q));filtered=filtered.filter(i=>{const due=(i.dueAt||0)<=now();if(stat==='due'&&!(due&&!i.suspended))return false;if(stat==='active'&&(i.suspended))return false;if(stat==='suspended'&&!i.suspended)return false;return true});filtered=filtered.filter(i=>{const p=successPct(i);if(suc==='lt50')return p!==null&&p<50;if(suc==='50to79')return p!==null&&p>=50&&p<=79;if(suc==='ge80')return p!==null&&p>=80;return true});const s=(sortSelect?.value)||state.settings.sortBy||'default';filtered=filtered.slice();filtered.sort((a,b)=>{if(s==='dueFirst'){return(a.dueAt||0)-(b.dueAt||0)}if(s==='succAsc'||s==='succDesc'){const ap=successPct(a),bp=successPct(b),av=ap===null?-1:ap,bv=bp===null?-1:bp;return s==='succAsc'?(av-bv):(bv-av)}if(s==='itAZ'){return norm(a.it).localeCompare(norm(b.it))}if(s==='deAZ'){return norm(a.de).localeCompare(norm(b.de))}return 0});countTxt.textContent=`${filtered.length} / ${state.items.length}`;const dueAll=state.items.filter(i=>!i.suspended&&(i.dueAt||0)<=now());byId('dueCounter').textContent=dueAll.length?`Fällig: ${dueAll.length}`:'Nichts fällig';tbody.innerHTML='';for(const it of filtered){const dueAtStr=it.dueAt?new Date(it.dueAt).toLocaleString():'–';const p=successPct(it);const cls=p===null?'':p>=80?'ok':p>=50?'mid':'bad';const pTxt=p===null?'—':`${p} %`;const tr=document.createElement('tr');tr.innerHTML=`<td><b>${it.it}</b></td><td>${it.de}</td><td class="muted due-cell"><span class="due-text">${dueAtStr}</span><button class="btn ghost btn-xs" data-edit-due="${it.id}">Bearbeiten</button></td><td>${it.streak||0}</td><td class="success-cell ${cls}">${pTxt}</td><td class="td-actions"><button class="btn ghost" data-action="toggle" data-id="${it.id}">${it.suspended?'Reaktivieren':'Pausieren'}</button><button class="btn ghost" data-action="delete" data-id="${it.id}">Löschen</button></td>`;tbody.appendChild(tr)}}
// Add
const itInput=byId('itInput'),deInput=byId('deInput'),notesInput=byId('notesInput');
byId('addBtn')?.addEventListener('click',()=>{const it=itInput.value.trim(),de=deInput.value.trim(),notes=notesInput.value.trim();if(!it||!de)return alert('Bitte IT & DE ausfüllen.');state.items.unshift({id:uid(),it,de,notes:notes||undefined,createdAt:now(),dueAt:now(),intervalIndex:0,streak:0,suspended:false,attempts:0,correct:0});save();itInput.value='';deInput.value='';notesInput.value='';tabsEl.querySelector('[data-tab=\"list\"]').click()});
byId('resetBtn')?.addEventListener('click',()=>{itInput.value='';deInput.value='';notesInput.value=''});
// Learn core
let currentId=null,lastCorrect=false;
byId('revealBtn')?.addEventListener('click',()=>{if(!currentId)return;const c=cardById(currentId);const a=dir()==='it-de'?c.de:c.it;answerBox.textContent='Antwort: '+a;answerBox.style.display='block'});
byId('againBtn')?.addEventListener('click',()=>grade('again'));
byId('goodBtn')?.addEventListener('click',()=>grade('good'));
byId('skipBtn')?.addEventListener('click',()=>{currentId=null;updateLearn()});
byId('nextBtn')?.addEventListener('click',()=>grade(lastCorrect?'good':'again'));
byId('speakBtn')?.addEventListener('click',()=>{if(!('speechSynthesis'in window))return alert('Sprachausgabe nicht unterstützt.');const txt=learnWord.textContent;const u=new SpeechSynthesisUtterance(txt);u.lang=dir()==='it-de'?'it-IT':'de-DE';speechSynthesis.speak(u)});
// Typing
byId('typeRevealBtn')?.addEventListener('click',()=>{if(!currentId)return;const c=cardById(currentId);const a=dir()==='it-de'?c.de:c.it;typeFeedback.textContent='Antwort: '+a;typeFeedback.className='type-feedback';typeFeedback.style.display='block'});
byId('typeCheckBtn')?.addEventListener('click',()=>{if(!currentId)return;const c=cardById(currentId);const a=dir()==='it-de'?c.de:c.it;const ok=isClose(typeInput.value,a);typeFeedback.textContent=ok?'Richtig!':'Richtig wäre: '+a;typeFeedback.className='type-feedback '+(ok?'ok':'bad');typeFeedback.style.display='block';grade(ok?'good':'again')});
typeInput?.addEventListener('keydown',e=>{if(e.key==='Enter'){byId('typeCheckBtn').click()}});
function cardById(id){return state.items.find(i=>i.id===id)}
function dir(){return state.settings.direction}
function mode(){return state.settings.mode}
function pickDue(){const due=state.items.filter(i=>!i.suspended&&(i.dueAt||0)<=now());if(!due.length)return null;due.sort((a,b)=>(a.dueAt||0)-(b.dueAt||0));return due[0]}
function updateLearn(){const card=pickDue();const m=mode();const isFC=(m==='flashcards'),isMC=(m==='mc'),isType=(m==='type');fcActions.style.display=isFC?'flex':'none';mcActions.style.display=isMC?'flex':'none';mcBox.style.display=isMC?'grid':'none';answerBox.style.display='none';answerBox.textContent='';typeBox.style.display=isType?'block':'none';typeFeedback.style.display='none';typeInput.value='';byId('nextBtn').disabled=true;const due=state.items.filter(i=>!i.suspended&&(i.dueAt||0)<=now());dueCounter.textContent=due.length?`Fällig: ${due.length}`:'Nichts fällig';if(!card){learnWord.textContent='🎉 Nichts fällig!';learnMeta.textContent=(isFC?'Karteikarten':isMC?'Multiple Choice':'Tippen')+' – '+(dir()==='it-de'?'IT→DE':'DE→IT');currentId=null;mcBox.innerHTML='';return}currentId=card.id;const q=dir()==='it-de'?card.it:card.de;const a=dir()==='it-de'?card.de:card.it;learnWord.textContent=q;const interval=INTERVALS[card.intervalIndex??0];learnMeta.textContent=(isFC?'Karteikarten':isMC?'Multiple Choice':'Tippen')+' – '+(dir()==='it-de'?'IT→DE':'DE→IT')+' • Intervall: '+fmtInterval(interval);if(isMC){const pool=shuffle(state.items.filter(i=>i.id!==card.id));const distractors=pool.slice(0,3).map(x=>dir()==='it-de'?x.de:x.it);const options=shuffle([a,...distractors]);mcBox.innerHTML='';options.forEach(opt=>{const b=document.createElement('button');b.type='button';b.className='btn ghost';b.textContent=opt;b.addEventListener('click',()=>{if(b.classList.contains('correct')||b.classList.contains('wrong'))return;const ok=norm(opt)===norm(a);lastCorrect=ok;b.classList.add(ok?'correct':'wrong');if(!ok){[...mcBox.children].forEach(btn=>{if(norm(btn.textContent)===norm(a))btn.classList.add('correct')})}byId('nextBtn').disabled=false});mcBox.appendChild(b)})}}
function grade(result){if(!currentId)return;const idx=state.items.findIndex(i=>i.id===currentId);if(idx<0)return;state.items[idx]=nextSchedule(state.items[idx],result);addHistory(result);save();currentId=null;updateLearn();renderList();renderStats()}
// Export/Import
byId('exportBtn')?.addEventListener('click',()=>{const data=JSON.stringify(state,null,2);download('parola-export.json',data)});
byId('clearBtn')?.addEventListener('click',()=>{if(!confirm('Alle Daten löschen?'))return;state.items=[];save();renderList();updateLearn();renderStats()});
byId('fileJson')?.addEventListener('change',e=>{const f=e.target.files[0];if(!f)return;const r=new FileReader();r.onload=()=>{try{const o=JSON.parse(r.result);if(!o||!Array.isArray(o.items))throw new Error('Ungültig');state.items=o.items;if(o.settings)state.settings=o.settings;if(Array.isArray(o.history))state.history=o.history;save();renderList();updateLearn();renderStats();alert('Import OK')}catch{alert('JSON ungültig')}};r.readAsText(f)});
byId('fileCsv')?.addEventListener('change',e=>{const f=e.target.files[0];if(!f)return;const r=new FileReader();r.onload=()=>{const rows=r.result.split(/\\r?\\n/).filter(Boolean);if(!rows.length)return alert('Leere CSV');const head=rows.shift().split(',').map(x=>x.trim().toLowerCase());const iit=head.indexOf('it'),ide=head.indexOf('de'),inotes=head.indexOf('notes');if(iit<0||ide<0)return alert('CSV braucht Spalten it,de');const items=[];for(const line of rows){const cols=line.split(',');const it=cols[iit]?.trim(),de=cols[ide]?.trim(),notes=inotes>=0?(cols[inotes]?.trim()||undefined):undefined;if(it&&de){items.push({id:uid(),it,de,notes,createdAt:now(),dueAt:now(),intervalIndex:0,streak:0,suspended:false,attempts:0,correct:0})}}if(!items.length)return alert('Keine gültigen Zeilen');state.items=[...items,...state.items];save();renderList();updateLearn();renderStats();alert(items.length+' Einträge importiert')};r.readAsText(f)});
byId('csvTplBtn')?.addEventListener('click',()=>{download('parola-template.csv','it,de,notes\\nragazzo,Junge,\\nacqua,Wasser,\\n')});
function download(filename,text){const a=document.createElement('a');a.href=URL.createObjectURL(new Blob([text],{type:filename.endsWith('.csv')?'text/csv':'application/json'}));a.download=filename;a.click();URL.revokeObjectURL(a.href)}
// Stats
function renderStats(){const today=state.history.find(x=>x.d===todayKey())||{good:0,bad:0};const totalGood=state.history.reduce((s,x)=>s+(x.good||0),0),totalBad=state.history.reduce((s,x)=>s+(x.bad||0),0);byId('statToday').textContent=(today.good+today.bad);byId('statTotal').textContent=(totalGood+totalBad);byId('statStreak').textContent=calcStreak();const ctx=byId('statsChart').getContext('2d');ctx.clearRect(0,0,600,160);const days=[];for(let i=6;i>=0;i--){const d=new Date();d.setDate(d.getDate()-i);const k=todayKey(d);const row=state.history.find(x=>x.d===k)||{good:0,bad:0};days.push({label:k.slice(5),good:row.good,bad:row.bad})}const W=600,H=160,pad=24,barW=(W-2*pad)/7*.6;ctx.font='12px Inter, sans-serif';ctx.textBaseline='top';const css=getComputedStyle(document.documentElement);const colT=css.getPropertyValue('--text')||'#000',colG=css.getPropertyValue('--ok')||'#2e7d32',colR=css.getPropertyValue('--bad')||'#c62828';const maxV=Math.max(1,...days.map(d=>d.good+d.bad));days.forEach((d,i)=>{const x=pad+(W-2*pad)/7*i+((W-2*pad)/7-barW)/2;const scale=(H-2*pad)/maxV;const hG=d.good*scale,hB=d.bad*scale;ctx.fillStyle=colR;ctx.fillRect(x,H-pad-hB,barW,hB);ctx.fillStyle=colG;ctx.fillRect(x,H-pad-hB-hG,barW,hG);ctx.fillStyle=colT;ctx.fillText(d.label,x,H-pad+4)})}
function calcStreak(){let s=0;for(let i=0;i<365;i++){const d=new Date();d.setDate(d.getDate()-i);const k=todayKey(d);const row=state.history.find(x=>x.d===k);if(!row||((row.good||0)+(row.bad||0))===0){if(i===0)continue;break}s++}return s}
renderList();updateLearn();renderStats();
